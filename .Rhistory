demo()
print("hi")
v <- c(1, 2, 3)
v
v[2]
v[3]
v[1]
v[0]
v1 <- v
v1
v <- c("a")
v1
v
v2 <- c(1, 'a')
v2
v[0]
v2[1] <- int(v[1])
file1 <- read.csv(file="simple.csv", head=TRUE, sep=",")
file1 <- read.csv(file="RProjects/RTutorial/simple.csv", head=TRUE, sep=",")
file1
summary(file)
summary(file1)
help("read.csv")
file1 <- read.csv(file="simple.csv", head=TRUE, sep=",")
setwd("~/RProjects/RTutorial")
file1 <- read.csv(file="simple.csv", head=TRUE, sep=",")
summary(file1)
dir()
getwd()
file1$trial
file1$velocity
names(file1)
names(file1)
setpwdwd("/")
getwd()
setwd("/")
dir()
setwd("Users/carsoncook/RProjects/RTutorial")
ls
file1 <- read.csv("data_files/simple.csv", head=TRUE, sep=",")
file1
describe(file1)
summary(file1)
tree_file <- read.csv("data_files/trees91.csv", head=TRUE, sep=",")
tree_file
summary(tree_file)
names(tree_file)
tree_file
trees
summary(trees)
summary(tree_file)
tree_file
attributes(tree_file)
names(tree_file)
tree_file$STSCC
help(read.fwf)
fixed_width <- read.fwf("data_files/fixedWidth.dat", widths=c(-17,15,7), col.names=c('temp','offices'))
fised_width
fixed_width
fixed_width <- read.fwf('data_files/fixedWidth.dat', widths=c(17, 15, 7))
fixed_width
a
a <- 3
a
a[0]
a[1]
a[2]
a[3]
a
ls
ls()
a <- c(1, 2, 3, 4, 5)
a
mean(a)
simple <- read.csv('data_files/simple.csv', sep=',')
simple
summary(simple)
a
var(a)
a <- numeric(10)
tree <- read.csv('data_files/trees91.csv', sep=',')
summary(tree$CHBR)
summary(tree)
tree
tree
summary(tree)
tree$C
summary(tree$C)
tree$C <- factor(tree$C)
tree$C
summary(tree$C)
levels(tree$C)
a <- c(1, 2, 3, 4)
b <- c(2, 4, 6, 8)
a
b
levels <- factor(c('A', 'B', 'A', 'B'))
df <- data.frame(first=a,)
df <- data.frame(first=a,
second=b,
f=levels)
df
summary(df)
df$first
df$second
df$f
a <- TRUE
a
a[0]
a[]
a[2]
a[]
a[[]]
a[][]
a[][][][][]
b = FALSE
b
a = c(1, 2, 3)
a
1|2
1 || 2
1 | 2
1 |
1
1 | false
1 | FALSE
FALSE
FALSE | 1
a <- c(ture)
a <- c(TRUE, FALSE)
b <- c(FALSE, FALSE)
a | b
a & b
xor(a, b)
xor(0,1)
is.numeric(a)
is.vector(a)
is.factor(df$f)
q()
w1 <- read.csv(file="w1.dat", sep=",", head=TRUE)
w1 <- read.csv(file="data_files/w1.dat", sep=",", head=TRUE)
names(w1)
tree <- read.csv(file="trees91.csv", sep=",", head=TRUE)
tree <- read.csv(file="data_files/trees91.csv", sep=",", head=TRUE)
names(tree)
help(stripchart)
stripchart(w1$vals)
stripchart(w1$vals, method="stack")
stripchart(w1$vals, method="jitter")
stripchart(w1$vals, vertical=TRUE)
stripchart(w1$vals, vertical=TRUE, method="jitter")
stripchart(w1$vals, method="stack",)
stripchart(w1$vals, method="stack",
main="leaf BioMass in High CO2 Environment",
xlab="BioMass of Leaves")
title("Leaf BioMass in High CO2 Environment, xlab="BioMass of Lesdsdaves")
title("Leaf BioMass in High CO2 Environment", xlab="BioMass of Lesdsdaves")
hist(w1.vals)
hist(w1[0])
w1[0]
hist(w1$vals)
hist(w1$vals,main="Distribution of w1", xlab="w1")
hist(w1$vals, breaks=12, xlim=c(0, 10))
hist(w1$vals, breaks=12, xlim=c(-1, 2))
hist(w1$vals, breaks=12, xlim=c(-0,2))
hist(w1$vals, breaks=10, xlim=c(-0,2))
hist(w1$vals, breaks=10, xlim=c(-0,2),
main="Leaf BioMass in High CO2 Environment",
xlab="BioMass of Lesdsdaves")
hist(w1$vals, main="Leaf BioMass in High CO2 Environment",
xlab="BioMass of Leaves", ylim=c(0, 16))
stripchart(w1$vals, add=TRUE, at=15.5)
a <- hist(w1$vals)
a
a.show()
boxplot(w1$vals)
boxplot(w1$vals, main="Leaf BioMass in High CO2 Environment",
ylab="BioMass of Leaves")
help("boxplot")
boxplot(w1$vals, main="Leaf BioMass in High CO2 Environment",
xlab="BioMass of Leaves",
horizontal=TRUE)
hist(w1$vals, main="Leaf BioMass in High CO2 Environment",
xlab="BioMass of Leaves", ylim=c(0, 16))
boxplot(w1$vals, horizontal=TRUE, at=16, add=TRUE, axes=FALSE)
hist(w1$vals, main="Leaf BioMass in High CO2 Environment",
xlab="BioMass of Leaves", ylim=c(0, 16))
boxplot(w1$vals, horizontal=TRUE, at=16, add=TRUE, axes=FALSE)
stripchart(w1$vals, add=TRUE, at=15)
tree <- read.csv(file="data_files/trees91.csv", sep=",", head=TRUE)
tree$C <- factor(tree$C)
tree$N <- factor(tree$N)
summary(tree)
boxplot(tree$STB, main="Stem BioMass in Different CO2 Environments",
ylab="BioMass of Stems")
boxplot(tree$STBM, main="Stem BioMass in Different CO2 Environments",
ylab="BioMass of Stems")
View(tree)
boxplot(tree$STBM~tree$C)
plot(tree$STBM, tree$LFBM)
cor(tree$STBM, tree$LFBM)
plot(tree$STBM, tree$LFBM, tree$RTBM)
plot(tree$STBM, tree$LFBM, main="Relationship Between Stem and Leaf Biomass", xlab="Stem Biomass", ylab="Leaf Biomass")
qqnorm(w1$vals)
qqline(w1$vals)
qqnorm(w1$vals)
qqnorm(w1$vals,
main="Normal Q-Q Plot of the Leaf Biomass",
xlab="Theoretical Quantiles of the Leaf Biomass",
ylab="Sample Quantiles of the Leaf Biomass")
qqline(w1$vals)
x <- rnorm(10, sd=5, mean=20)
y <- 2.5 * x - 1.0 + rnorm(10, sd=9, mean=0)
cor(x,y)
ls
x <- rnorm(10, sd=5, mean=20)
y <- 2.5 * x - 1.0 + rnorm(10, sd=9, mean=0)
cor(x, y)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
x1 <- runif(8, 15, 25)
y1 <- 2.5 * x1 - 1.0 + runif(8, -6, 6)
help(runif)
size(x1)
x1.size()
x1.length()
length(x1)
points(x1, y1, col=2)
y1
x1
points(x1, y1, col=1)
points(x1, y1, col=blue)
points(x1, y1, col="blue")
points(x1, y1, col="green")
points(x2, y2, col=3, pch=2)
points(x1, y2, col=3, pch=2)
points(x1, y1, col=3, pch=2)
points(x1, y1, col=3, pch=3)
points(x1, y1, col=3, pch=4)
points(x1, y1, col=3, pch=5)
points(x1, y1, col=3, pch=6)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
points(x1, y1, col=2, pch=4)
x2 <- runif(8, 15, 25)
y2 <- 2.5 * x2 - 1.0 + runif(8, -6, 6)
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
legend(14, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
legend(14, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
legend(14, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
legend(18, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
legend(16, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff", xlim=c(0, 30), ylim=c(0, 100))
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
legend(14, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff", xlim=c(0, 30), ylim=c(0, 100))
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
legend(5, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
xHigh <- x
yHigh <- y + abs(rnorm(10, sd=3.5))
xLow <- x
yLow <- y - abs(rnorm(10, sd=3.1))
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=3)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
xHigh <- x
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
xHigh <- x + abs(rnorm(10, sd=3.5))
yHigh <- y + abs(rnorm(10, sd=3.5))
xLow <- x - abs(rnorm(10, sd=3))
yLow <- y - abs(rnorm(10, sd=3.5))
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=3)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
xHigh <- x
yHigh <- y + abs(rnorm(10, sd=3.5))
xLow <- x
yLow <- y - abs(rnorm(10, sd=3.1))
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=2)
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=3)
help(rhyper)
numberWhite <- rhyper(400, 4, 5, 3)
numberChipped <- rhyper(400, 2, 7, 3)
par(mfrow=c(1, 2))
plot(numberWhite, numberChipped, xlab="Number White Marbles Drawn",
ylab="Number Chipped Marbles Drawn", main="Pulling Marbles")
plot(jitter(numberWhite), jitter(numberChipped), xlab="Number White Marbles Drawn", ylab="Number Chipped Marbles Drawn", main="Pulling Marbles")
par(mfrow=c(2, 3))
boxplot(numberWhite, main="first plot")
boxplot(numberChipped, main="second plot")
plot(jitter(numberWhite), jitter(numberChipped), xlab="Number White Marbles Drawn", ylab="Nuber Chipped Marbles Drawn", main="Pulling Marbles With Jitter")
hist(numberWhite, main="fourth plot")
hist(numberChipped, main="fifth plot")
mosaicplot(table(numberWhite, numberChipped), main="sixth plot")
x <- rnorm(10, sd=5, mean=20)
y <- 2.5 * x - 1.0 + rnorm(10, sd=9, mean=0)
cor(x, y)
x
y
z <- series(1, 10)
z <- seq(1, 10, step=1)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
x1 <- runif(8, 15, 25)
x1
y1 <- 2.5 * x - 1.0 + runif(8, -6, 6)
y1 <- 2.5 * x1 - 1.0 + runif(8, -6, 6)
points(x1, y1, col=2)
x2 <- runif(8, 15, 25)
y2 <- 2.5 * x2 - 1.0 + runif(8, -6, 6)
points(x2, y2, col=3, pch=2)
plot(x, y, xlab="Independent", ylab="Dependent", main="Random Stuff")
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
legend(14, 70, c("Original", "one", "two"), col=c(1, 2, 4), pch=c(1, 3, 5))
plot(x, y, xlab="Independent", ylab="Dependent", main="Indeterminate", xlim=c(0, 30), ylim=c(0, 100))
points(x1, y1, col=2, pch=3)
points(x2, y2, col=4, pch=5)
plot(x, y, xlab="Independent", ylab="Dependent", main="Indeterminate")
xHigh <- x
yHigh <- y + abs(rnorm(10, sd=3.5))
y
yHigh
xLow <- x
yLow <- y - abs(rnorm(10, sd=3.1))
yLow
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=3)
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=1)
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=2)
plot(x, y, xlab="Independent", ylab="Dependent", main="Indeterminate")
xHigh <- x
yHigh <- y + abs(rnorm(10, sd=3.5))
xLow <- x
yLow <- y - abs(rnorm(10, sd=3.1))
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=1)
arrows(xHigh, yHigh, xLow, yLow, col=2, angle=90, length=0.1, code=2)
numberWhite <- rhyper(400, 4, 5, 3)
numberChipped <- rhyper(400, 2, 7, 3)
par(mfrow=c(1, 2))
plot(numberWhite, numberChipped, xlab="Number White Drawn",
ylab="Number Chipped Drawn", main="Pulling Marbles")
plot(jitter(numberWhite), jitter(numberChipped),
xlab="Number White Drawn", ylab="Number Chipped Drawn",
main="Pulling Marbles With Jitter")
par(mfrow=c(2, 3))
boxplot(numberWhite, main="Plot 1")
boxplot(numberChipped, main="Plot 2")
plot(jitter(numberWhite), jitter(numberChipped),
xlab="# White Drawn", ylab="# Chipped Drawn",
main="Pulling Marbles with Jitter")
hist(numberWhite, main="Plot 4")
hist(numberChipped, main="Plot 5")
mosaicplot(table(numberWhite, numberChipped), main="Plot 6")
numberWhite <- rhyper(30, 4, 5, 3)
help(rhyper)
numberChipped <- rhyper(30, 2, 7, 3)
numberChipped
numberWhite
cant <- rhyper(30, 2, 5, 8)
cant <- rhyper(30, 2, 5, 7)
smoothScatter(numberWhite, numberChipped,
xlab="White", ylab="Chipped",
main="Hi!")
smoothScatter(numberWhite, numberChipped,
xlab="White", ylab="Chipped",
main="Hi!")
par(mfrow=c(1, 1))
smoothScatter(numberWhite, numberChipped,
xlab="White", ylab="Chipped",
main="Hi!")
grid(4, 3)
uData <- rnorm(20)
vData <- rnorm(20, mean=5)
wData <- udata + 2 * vData + rnorm(20, sd=0.5)
wData <- uData + 2 * vData + rnorm(20, sd=0.5)
xData <- -2 * uData + rnorm(20, sd=0.1)
yData <- 3 * vData + rnorm(20, sd=2.5)
d <- data.frame(u=uData, v=vData, w=wData, x=xData,
y=yData)
pairs(d)
x <- c(-1, 1, 1, -1, -1)
y <- c(-1, -1, 1, 1, -1)
plot(x, y)
polygon(x, y, col=3)
stdDev <- 0.75
x <- seq(-5, 5, by=0.01)
y <- dnorm(x, sd=stdDev)
y
help(norm)
help(dnorm)
right <- qnorm(0.95, sd=stdDev)
plot(x, y, type="l", xaxt="n", ylab="p",)
plot(x, y, type="l", xaxt="n", ylab="p",
xlab=expression(paste('Assumed Dist of ',bar(x))),
axes=FALSE, ylim=c(0, max(y) * 1.05), xlim=c(min(x), max(x)),
frame.plot=FALSE)
axis(1, at=c(-5, right, 0, 5),
pos=c(0,0),
labels=c(expression(' '), expression(bar(x)[cr]),
expression(mu[0]), expression(' ')))
axis(2)
xReject <- seq(right, 5, by=0.01)
yReject <- dnorm(xReject, sd=stdDev)
polygon(c(xReject, xReject[length(xReject)], xReject[1]),
c(yReject, 0, 0), col='red')
x <- seq(0, 2*pi, by=pi/100)
y <- x
xg <- (x * 0 + 1) %*% t(y)
yg <- (x) %*% t(y * 0 + 1)
f <- sin(xg + yg)
persp(x, y, f, theta=-10, phi=40)
x
persp(x, y, f, theta=-10, phi=40)
numberWhite <- rhyper(30, 4, 5, 3)
numberChipped <- rhyper(30, 2, 7, 3)
numberWhite <- as.factor(numberWhite)
plot(numberWhite)
totals <- table(numberWhite)
totals
totals[1]
totals[2]
totals[3]
totals[4]
barplot(totals, main="Number Draws", ylab="Frequency", xlab="Draws")
rownames(totals) <- c("none", "two", "three")
rownames(totals) <- c("none", "one", "two", "three")
totals
barplot(totals, main="Number Draws", ylab="Frequency", xlab="Draws")
barplot(sort(totals, decreasing=TRUE), main="Number Draws", ylab="Frequency")
totals
sort(totals, decreasing=TRUE)
totals[c(3, 1, 4, 2)]
totals
barplot(totals[1, 2, 3, 4])
barplot(totals[c(3, 2, 1, 4)])
xLoc <- barplot(sort(totals, decreasing=TRUE), main="Number Draws", ylab="Frequency", xlab="Draws", ylim=c(0, sum(totals)+2))
xLoc
points(xLoc, cumsum(sort(totals, decreasing=TRUE)), type='p', col=2)
points(xLoc, cumsum(sort(totals, decreasing=TRUE)), type='l')
santa <- data.frame(belief=c('no belief','no belief','no belief','no belief',
'belief','belief','belief','belief',
'belief','belief','no belief','no belief',
'belief','belief','no belief','no belief'),
sibling=c('older brother','older brother','older brother','older sister',
'no older sibling','no older sibling','no older sibling','older sister',
'older brother','older sister','older brother','older sister',
'no older sibling','older sister','older brother','no older sibling')
)
santa
plot(santa$belief)
plot(santa$sibling)
plot(santa$sibling, santa$belief)
plot(santa$belief, santa$sibling)
totals <- table(santa$belief, santa$sibling)
totals
mosaicplot(totals, main="Older Brothers are Jerks", xlab="Belief in Santa Claus", ylab="Older Sibling")
rownames(totals)
colnames(totals)
totals
totals
rownames(totals) <- c("Believe", "Don't Believe")
colnames("No Older", "Older Brother", "Older Sister")
colnames(totals) <- c("No Older", "Older Brother", "Older Sister")
colnames
totals
mosaicplot(totals, main="Older Brothers are Jerks", xlab="Belief in Santa Claus", ylab="Older Sibling")
colnames(totals) <- c("No Older Sibling", "Older Brother", "Older Sister")
mosaicplot(totals, main="Older Brothers are Jerks", xlab="Belief in Santa Claus", ylab="Older Sibling")
totals
totals[c(2,1), c(2, 3, 1)]
mosaicplot(totals[c(2, 1), c(2, 3, 1)], main="Older Brothers are Jerks", xlab="Belief in Santa Claus", ylab="Older Sibling", col=c(2, 3, 4))
mosaicplot(t(totals), main="Older Brothers are Jerks", ylab="Belief in Santa Claus", xlab="Older Sibling", col=c(2, 3))
